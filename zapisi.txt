https://git-scm.com/downloads
https://git-scm.com/book/ru/v2




git
**переходим в с\users\name
cope NUL .gitconfig (созадли файл) открыввет этот файл и записываем емейл и тд)
git config --list --global (видим чт опараметры сохранились в гите)

переходим в папку через командную строку где будт храниться наш репозиторий
git clone (и вставлем ссылку с сайта гитхаб)
теперь заходим в эту папку с ком.строки
git status 
создаем файл в винде в этой папке
git status
добавляем в файл строку в винде
git add File1.txt (добавить в наш репозиторий, что бы он его видел)
git status
если опять внести изменения в файл в винде....
согласимся с этими изменениями (а можно и откатиться)
git add File1.txt
файл пока что локально находится
git commit -m "test comit bla bla bla" это мы закомитили на локальный репозиторий.
что бы этот файл попал на удаленный репозиторий нужно
git push

изменяем файл на сайте. добавили комменты
открыввем git bush
cat File1.txt (просмотреть что в файле)
git fetch (покажет, что есть изменения на удаленном репозитории) записывает как бы в origin/master
git status (увидим на сколько веток отстает наша ветка)
git pull (залили из удаленного на локальный) синхронизировали. у нас появился номер комита
git log посмотреть все изменения все комиты
q что бы выйти
git log -- (имя автора)
git show (и копируем наш хтак мы смотрим изменения этого файла
git show покажется последние изменения
git blame (хэш) какие изменения в файл вводил тот или иной автор
git blame File1.txt | grep 123 посмотреть кто делал изменения в строке 123
git blame File1.txt | grep (имя автора)
acho "Add line" >> File1.txt (добавили строку в файл)
git diff смотрим изменения в файле
git add
git commit -m "text"
git push 




ls
cat File1.txt
echo "new line" >> newfile
git status
git commit -a -m "new commit" a значит что все файлы добавляем
git reset HEAD~1
 git commit -am "new commit"       a значит все m значит message 
что бы залить информацию из удаленного репозитория на локальный используем 
git pull

если мы внесли в один файл изменения на гите и на пк, то будет конфликт. делаем гит пул, гит комит, гит пуш...может последовательность напутал. потом гит статус покаждет что оба файла модифицированы. заходим в наш файл на пк. удаляем добавленные комментарии лишние. сохраняем их. дальше 
git merge --abort (это если разработчику пишем)
---дальше
git add .
git commit -am "test"
git push

echo "line to remove" >> File1.txt (добавили в файл строку)
cat File1.txt
git checkout File1.txt (откатить изменение)
git checkout . (с точной это откатить все изменения. если мы внесли изменения в не один файл)

echo "line to remove" >> File1.txt
git stash (это мы удаляем последнее изменение, но сохраняем его во временное хранилище)
git stash pop это вернули изменения
git stash clear удаляем навсегда информацию (я так понял из временного хранилища)